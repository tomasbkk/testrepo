name: CMake

on:
  workflow_dispatch:
    inputs:
      buildType:
        type: choice
        description: 'Build Type'
        default: Release
        options: 
        - Dev
        - Pre-release
        - Release
      overwriteVersion:
        type: boolean
        default: false
        description: 'Overwrite CMakeLists.txt version'
      versionMajor:
        type: string
        description: 'Version major'
        default: '1'
      versionMinor:
        type: string
        description: 'Version minor'
        default: '0'
      versionPatch:
        type: string
        description: 'Version patch'
        default: '0'
      versionRev:
        type: string
        description: 'Version rev'
        default: '0'
        

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  GITHUB_BUILD_NUMBER: ''

jobs:
  call-workflow-2-in-local-repo:
    uses: ./.github/workflows/get-artifact-name.yml
    
  build:
    runs-on: windows-2019

    steps:
     
    - uses: actions/checkout@v3


    
    - name: Get timestamp
      if: true
      id: time
      uses: nanzm/get-time-action@v1.1
      with:
        format: 'YYYY.MM.DD-HH.mm.ss'
        
    - name: Configure CMake
      if: true
      run: cmake -G "Visual Studio 16 2019" -S ${{ github.workspace }}/TestApp -B ${{github.workspace}}/build

    - name: Build
      if: true
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{ env.BUILD_TYPE }}
     
    - name: Read version information
      if: false
      id: versionInfo
      uses: juliangruber/read-file-action@v1
      with:
        path: ${{ github.workspace }}\TestApp\version.txt
        
    - name: Trim version
      if: false
      id: versionTrim
      uses: frabert/replace-string-action@v2.0
      with:
        pattern: '\\s+'
        string: ${{ steps.versionInfo.outputs.content }}
        replace-with: ''
        
    - name: Create build artifact
      if: true
      uses: actions/upload-artifact@v3.1.0
      with:
        name: Mt.TestApp${{ steps.versionTrim.outputs.replaced }}
        path: ${{ github.workspace }}\build\Release
        
    - name: Zip build outputs
      if: true
      uses: thedoctor0/zip-release@main
      with:
        path: '${{ github.workspace }}\build\Release\*'
        filename: 'TestApp${{ steps.versionTrim.outputs.replaced }}.${{ github.run_number }}.zip'
  
    - name: Zip symbols
      if: false
      uses: thedoctor0/zip-release@main
      with:
        path: '${{ github.workspace }}\build\Release\*'
        filename: 'Symbols${{ steps.versionTrim.outputs.replaced }}.${{ github.run_number }}.zip'
  
    - name: Create a GitHub release
      id: create_release
      uses: "marvinpinto/action-automatic-releases@v1.2.1"
      if: false
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        automatic_release_tag: "${{ steps.versionTrim.outputs.replaced }}.${{ github.run_number }}"
        prerelease: ${{ contains(github.event.inputs.buildType, 'Pre-release') }}
        title: Release ${{ steps.tag_version.outputs.new_tag }}
        files: |
          TestApp${{ steps.versionTrim.outputs.replaced }}.${{ github.run_number }}.zip
          Symbols${{ steps.versionTrim.outputs.replaced }}.${{ github.run_number }}.zip

    - name: Upload bundle
      uses: bayssmekanique/action-simple-file-upload@v1
      with:
        user: "u836597012.imsonic"
        password: "ZepuZepu311"
        host: "tomasbkk.com"
        src: "TestApp${{ steps.versionTrim.outputs.replaced }}.${{ github.run_number }}.zip"
        dest: "TestApp${{ steps.versionTrim.outputs.replaced }}.${{ github.run_number }}.zip"
